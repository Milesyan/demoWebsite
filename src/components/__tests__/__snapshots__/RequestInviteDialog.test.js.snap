// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RequestInviteDialog functions should have a disabled send button as default, and an active button when all inputs are valid 1`] = `
<Modal
  onClick={[MockFunction]}
>
  <div
    className="dialog"
  >
    <div
      className="dialogTitle"
    >
      Request an invite
    </div>
    <Input
      errMsg={null}
      onEmitUpdates={[Function]}
      placeholder="Full Name"
    />
    <Input
      errMsg={null}
      onEmitUpdates={[Function]}
      placeholder="Email"
    />
    <Input
      errMsg={null}
      onEmitUpdates={[Function]}
      placeholder="Confirm Email"
      shouldEmitUpdates={true}
    />
  </div>
  <Button
    isDisabled={false}
    onClick={[Function]}
  >
    Send
  </Button>
</Modal>
`;

exports[`RequestInviteDialog input onChange validates should set correct error when onConfirmedEmailChanged is called: Error state for empty confirmed email 1`] = `
Object {
  "confirmEmailMsg": "Please input an Email address",
  "confirmedEmail": "",
  "email": "miles@ttt.com",
  "emailErrMsg": null,
  "fullName": "",
  "nameErrMsg": null,
}
`;

exports[`RequestInviteDialog input onChange validates should set correct error when onConfirmedEmailChanged is called: Error state for invalid email 1`] = `
Object {
  "confirmEmailMsg": "Please input a valid Email address",
  "confirmedEmail": "invalidCOnfimed",
  "email": "miles@ttt.com",
  "emailErrMsg": null,
  "fullName": "",
  "nameErrMsg": null,
}
`;

exports[`RequestInviteDialog input onChange validates should set correct error when onConfirmedEmailChanged is called: Error state for matched confirmed email 1`] = `
Object {
  "confirmEmailMsg": null,
  "confirmedEmail": "miles@ttt.com",
  "email": "miles@ttt.com",
  "emailErrMsg": null,
  "fullName": "",
  "nameErrMsg": null,
}
`;

exports[`RequestInviteDialog input onChange validates should set correct error when onConfirmedEmailChanged is called: Error state for not matched confirmed email 1`] = `
Object {
  "confirmEmailMsg": "Email address does not match",
  "confirmedEmail": "test@valid.com",
  "email": "miles@ttt.com",
  "emailErrMsg": null,
  "fullName": "",
  "nameErrMsg": null,
}
`;

exports[`RequestInviteDialog input onChange validates should set correct error when onEmailChanged is called: Error state for empty email 1`] = `
Object {
  "confirmEmailMsg": null,
  "confirmedEmail": "",
  "email": "",
  "emailErrMsg": "Please input an Email address",
  "fullName": "",
  "nameErrMsg": null,
}
`;

exports[`RequestInviteDialog input onChange validates should set correct error when onEmailChanged is called: Error state for invalid email 1`] = `
Object {
  "confirmEmailMsg": null,
  "confirmedEmail": "",
  "email": "invalid",
  "emailErrMsg": "Please input a valid Email address",
  "fullName": "",
  "nameErrMsg": null,
}
`;

exports[`RequestInviteDialog input onChange validates should set correct error when onEmailChanged is called: Error state for valid email 1`] = `
Object {
  "confirmEmailMsg": null,
  "confirmedEmail": "",
  "email": "test@valid.com",
  "emailErrMsg": null,
  "fullName": "",
  "nameErrMsg": null,
}
`;

exports[`RequestInviteDialog input onChange validates should set correct error when onNameChanged is called: Error state for empty name 1`] = `
Object {
  "confirmEmailMsg": null,
  "confirmedEmail": "",
  "email": "",
  "emailErrMsg": null,
  "fullName": "",
  "nameErrMsg": "You must input a name",
}
`;

exports[`RequestInviteDialog input onChange validates should set correct error when onNameChanged is called: Error state for short name 1`] = `
Object {
  "confirmEmailMsg": null,
  "confirmedEmail": "",
  "email": "",
  "emailErrMsg": null,
  "fullName": "ab",
  "nameErrMsg": "Full name must be at least 3 charactors long",
}
`;

exports[`RequestInviteDialog input onChange validates should set correct error when onNameChanged is called: Error state for valid name 1`] = `
Object {
  "confirmEmailMsg": null,
  "confirmedEmail": "",
  "email": "",
  "emailErrMsg": null,
  "fullName": "Good Name",
  "nameErrMsg": null,
}
`;

exports[`RequestInviteDialog snapshots should match snapshot in error status with dialogMessage 1`] = `
<Modal
  onClick={[MockFunction]}
>
  <div
    className="dialog"
  >
    <div
      className="dialogTitle"
    >
      Request an invite
    </div>
    <Input
      errMsg={null}
      onEmitUpdates={[Function]}
      placeholder="Full Name"
    />
    <Input
      errMsg={null}
      onEmitUpdates={[Function]}
      placeholder="Email"
    />
    <Input
      errMsg={null}
      onEmitUpdates={[Function]}
      placeholder="Confirm Email"
      shouldEmitUpdates={true}
    />
  </div>
  <Button
    isDisabled={true}
    onClick={[Function]}
  >
    Send
  </Button>
  <div
    className="serverErrorMessage"
  >
    EXAMPLE ERROR MESSAGE
  </div>
</Modal>
`;

exports[`RequestInviteDialog snapshots should match snapshot in inital status 1`] = `
<Modal
  onClick={[MockFunction]}
>
  <div
    className="dialog"
  >
    <div
      className="dialogTitle"
    >
      Request an invite
    </div>
    <Input
      errMsg={null}
      onEmitUpdates={[Function]}
      placeholder="Full Name"
    />
    <Input
      errMsg={null}
      onEmitUpdates={[Function]}
      placeholder="Email"
    />
    <Input
      errMsg={null}
      onEmitUpdates={[Function]}
      placeholder="Confirm Email"
      shouldEmitUpdates={true}
    />
  </div>
  <Button
    isDisabled={true}
    onClick={[Function]}
  >
    Send
  </Button>
</Modal>
`;

exports[`RequestInviteDialog snapshots should match snapshot in loading status 1`] = `
<Modal
  onClick={null}
>
  <div
    className="dialog"
  >
    <div
      className="dialogTitle"
    >
      Request an invite
    </div>
    <Input
      errMsg={null}
      onEmitUpdates={[Function]}
      placeholder="Full Name"
    />
    <Input
      errMsg={null}
      onEmitUpdates={[Function]}
      placeholder="Email"
    />
    <Input
      errMsg={null}
      onEmitUpdates={[Function]}
      placeholder="Confirm Email"
      shouldEmitUpdates={true}
    />
  </div>
  <Button
    isDisabled={true}
  >
    Sending, please wait...
  </Button>
</Modal>
`;

exports[`RequestInviteDialog snapshots should match snapshot in success status 1`] = `
<Modal
  onClick={[MockFunction]}
>
  <div
    className="dialog"
  >
    <div
      className="dialogTitle"
    >
      All Done!
    </div>
    <div
      style={
        Object {
          "textAlign": "center",
        }
      }
    >
      You will be one of the first to experience Broccoli & Co. when we launch.
    </div>
  </div>
  <Button
    onClick={[MockFunction]}
  >
    OK
  </Button>
</Modal>
`;
